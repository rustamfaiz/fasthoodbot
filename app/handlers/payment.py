from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import FSInputFile
from utils.pdf_generator import generate_personal_pdf

import random
import os

router = Router()

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è FSM
class Form(StatesGroup):
    waiting_for_promocode = State()
    waiting_for_name = State()
    waiting_for_phone = State()

# –®–∞–≥ 4 ‚Äî –í—ã–±–æ—Ä —Ä–µ–≥–∏–æ–Ω–∞
@router.callback_query(F.data == "get_book")
async def ask_region(callback: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.button(text="–†–æ—Å—Å–∏—è", callback_data="region_ru")
    builder.button(text="–î—Ä—É–≥–∏–µ —Å—Ç—Ä–∞–Ω—ã", callback_data="region_other")
    builder.button(text="‚¨Ö –ù–∞–∑–∞–¥", callback_data="back_to_start")
    builder.adjust(1)

    await callback.message.answer(
        "üìç –£–∫–∞–∂–∏ —Ä–µ–≥–∏–æ–Ω ‚Äî –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã:",
        reply_markup=builder.as_markup()
    )

# –®–∞–≥ 5 ‚Äî –†–æ—Å—Å–∏—è / –≤–≤–æ–¥ –ø—Ä–æ–º–æ–∫–æ–¥–∞
@router.callback_query(F.data == "region_ru")
async def ask_promocode(callback: types.CallbackQuery, state: FSMContext):
    await state.set_state(Form.waiting_for_promocode)
    await callback.message.answer("üí° –í–≤–µ–¥–∏ –ø—Ä–æ–º–æ–∫–æ–¥, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å. –ò–ª–∏ –Ω–∞–ø–∏—à–∏ ¬´-¬ª, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –Ω–µ–≥–æ:")

# –®–∞–≥ 5 ‚Äî –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞
@router.message(Form.waiting_for_promocode)
async def handle_promo_and_ask_payment(message: types.Message, state: FSMContext):
    code = message.text.strip()
    promo_applied = False

    if code.lower() == "fat2024":
        await state.update_data(price="2500")
        promo_applied = True
        text = (
            "‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –°–∫–∏–¥–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞.\n\n"
            "–†–æ–∑–Ω–∏—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–Ω–∏–≥–∏ –§–∞—Å—Ç–•—É–¥ ‚Äî –ñ–∏—Ä–æ—Å–∂–∏–≥–∞–Ω–∏–µ –∑–∞ 4 –º–µ—Å—è—Ü–∞ –±–µ–∑ –≥–æ–ª–æ–¥–∞ –∏ –±–µ–≥–æ–≤–æ–π –¥–æ—Ä–æ–∂–∫–∏ ‚Äî 3500 —Ä—É–±–ª–µ–π\n\n"
            "–° —Ç–≤–æ–∏–º –ø—Ä–æ–º–æ–∫–æ–¥–æ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–Ω–∏–≥–∏ ‚Äî 2500 —Ä—É–±–ª–µ–π"
        )
    elif code == "-":
        await state.update_data(price="2900")
        text = (
            "–û–∫, –ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–µ—Ç ‚Äî –Ω–µ —Å—Ç—Ä–∞—à–Ω–æ!\n\n"
            "–ó–∞–±–∏—Ä–∞–π –∫–Ω–∏–≥—É —Å –ª–∏—á–Ω–æ–π —Å–∫–∏–¥–∫–æ–π –æ—Ç –∞–≤—Ç–æ—Ä–∞:\n"
            "–†–æ–∑–Ω–∏—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–Ω–∏–≥–∏ –§–∞—Å—Ç–•—É–¥ ‚Äî –ñ–∏—Ä–æ—Å–∂–∏–≥–∞–Ω–∏–µ –∑–∞ 4 –º–µ—Å—è—Ü–∞ –±–µ–∑ –≥–æ–ª–æ–¥–∞ –∏ –±–µ–≥–æ–≤–æ–π –¥–æ—Ä–æ–∂–∫–∏ ‚Äî 3500 —Ä—É–±–ª–µ–π\n\n"
            "–¶–µ–Ω–∞ –¥–ª—è —Ç–µ–±—è ‚Äî 2900 —Ä—É–±–ª–µ–π"
        )
    else:
        await message.answer(
            "‚ùå –¢–∞–∫–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –Ω–µ—Ç.\n"
            "–ü—Ä–æ–≤–µ—Ä—å –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ ¬´-¬ª, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –Ω–µ–≥–æ ‚Äî —Å –ª–∏—á–Ω–æ–π —Å–∫–∏–¥–∫–æ–π –æ—Ç –∞–≤—Ç–æ—Ä–∞."
        )
        return

    await message.answer(text)

    builder = InlineKeyboardBuilder()
    builder.button(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑ –°–ë–ü", callback_data="pay_qr")
    builder.button(text="‚ö†Ô∏è –û–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑ –ÆKassa", callback_data="pay_yookassa")
    builder.button(text="‚¨Ö –ù–∞–∑–∞–¥", callback_data="back_to_promocode")
    builder.adjust(1)

    await message.answer(
        "–í—ã–±–µ—Ä–∏ —É–¥–æ–±–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:\n\n"
        "üìå –ß–µ—Ä–µ–∑ –°–ë–ü ‚Äî –æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–Ω–∏–≥–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤\n"
        "üìå –ß–µ—Ä–µ–∑ –ÆKassa ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞ 15 –º–∏–Ω—É—Ç (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)",
        reply_markup=builder.as_markup()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ÆKassa (–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç)
@router.callback_query(F.data == "pay_yookassa")
async def temp_yookassa_notice(callback: types.CallbackQuery):
    await callback.message.answer(
        "‚ùå –≠—Ç–æ—Ç —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –ø–æ–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n"
        "–í—ã–±–µ—Ä–∏ –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–±."
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ–º–æ–∫–æ–¥—É
@router.callback_query(F.data == "back_to_promocode")
async def back_to_promo(callback: types.CallbackQuery, state: FSMContext):
    await state.set_state(Form.waiting_for_promocode)
    await callback.message.answer("üîÅ –í–≤–µ–¥–∏ –ø—Ä–æ–º–æ–∫–æ–¥ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ ¬´-¬ª, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç:")

# –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –°–ë–ü (–≤—Ä–µ–º–µ–Ω–Ω–æ): –æ–±—Ä–∞–±–æ—Ç–∫–∞ pay_qr ‚Äî —Å—é–¥–∞ –ø–æ–π–¥—ë–º –≤ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ
@router.callback_query(F.data == "pay_qr")
async def handle_qr_payment(callback: types.CallbackQuery):
    await callback.message.answer("üßæ –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–ø–ª–∞—Ç–µ —á–µ—Ä–µ–∑ –°–ë–ü... (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")
