from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from utils.pdf_generator import generate_personal_pdf

router = Router()

class PaymentFSM(StatesGroup):
    waiting_for_full_name = State()
    waiting_for_phone = State()

# –®–∞–≥ 6.1 ‚Äî –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è "‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª"
@router.callback_query(F.data.startswith("paid_"))
async def handle_payment_confirmation(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.answer("üìù –í–≤–µ–¥–∏ —Å–≤–æ—ë <b>–§–ò–û</b>, —á—Ç–æ–±—ã –º—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏ –∫–Ω–∏–≥—É.")
    await state.set_state(PaymentFSM.waiting_for_full_name)

# –®–∞–≥ 6.2 ‚Äî –ø–æ–ª—É—á–∞–µ–º –§–ò–û
@router.message(PaymentFSM.waiting_for_full_name)
async def get_full_name(message: types.Message, state: FSMContext):
    await state.update_data(full_name=message.text.strip())
    await message.answer("üì± –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ).")
    await state.set_state(PaymentFSM.waiting_for_phone)

# –®–∞–≥ 6.3 ‚Äî –ø–æ–ª—É—á–∞–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
@router.message(PaymentFSM.waiting_for_phone)
async def get_phone_and_send_pdf(message: types.Message, state: FSMContext):
    user_data = await state.get_data()
    full_name = user_data.get("full_name")
    phone = message.text.strip()

    input_path = "files/—Ç–µ—Å—Ç –∫–Ω–∏–≥–∏.pdf"
    output_path = f"files/book_{message.from_user.id}.pdf"

    generate_personal_pdf(
        input_path=input_path,
        output_path=output_path,
        full_name=full_name,
        phone_number=phone
    )

    await message.answer_document(
        types.FSInputFile(path=output_path),
        caption="üìò –ì–æ—Ç–æ–≤–æ! –í–æ—Ç —Ç–≤–æ—è –∏–º–µ–Ω–Ω–∞—è –∫–Ω–∏–≥–∞."
    )
    await state.clear()
