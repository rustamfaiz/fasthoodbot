from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.utils.keyboard import InlineKeyboardBuilder

router = Router()

class UserData(StatesGroup):
    waiting_for_name = State()
    waiting_for_email = State()

@router.callback_query(lambda c: c.data == "pay_card")
async def start_user_data(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.answer("‚úçÔ∏è –í–≤–µ–¥–∏ —Å–≤–æ—ë <b>–∏–º—è</b>, —á—Ç–æ–±—ã –æ–Ω–æ –ø–æ—è–≤–∏–ª–æ—Å—å –Ω–∞ –æ–±–ª–æ–∂–∫–µ –∫–Ω–∏–≥–∏:")
    await state.set_state(UserData.waiting_for_name)

@router.message(UserData.waiting_for_name)
async def process_name(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer("üìß –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ <b>email</b> ‚Äî –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è —Å–≤—è–∑–∞—Ç—å—Å—è:")
    await state.set_state(UserData.waiting_for_email)

@router.message(UserData.waiting_for_email)
async def process_email(message: types.Message, state: FSMContext):
    await state.update_data(email=message.text)
    data = await state.get_data()

    builder = InlineKeyboardBuilder()
    builder.button(
        text="‚úÖ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ",
        url="https://example.com/pay"  # ‚Üê –ø–æ–∑–∂–µ –∑–∞–º–µ–Ω–∏–º –Ω–∞ –Ω–∞—Å—Ç–æ—è—â—É—é —Å—Å—ã–ª–∫—É
    )
    builder.adjust(1)

    await message.answer(
        f"üéâ –û—Ç–ª–∏—á–Ω–æ! –í–æ—Ç —á—Ç–æ —Ç—ã –≤–≤—ë–ª:\n\n"
        f"üë§ –ò–º—è: <b>{data['name']}</b>\n"
        f"üìß Email: <b>{data['email']}</b>\n\n"
        f"–¢–µ–ø–µ—Ä—å –∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚Äî –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏ –∫ –æ–ø–ª–∞—Ç–µ:",
        reply_markup=builder.as_markup()
    )

    await state.clear()
